% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impute_gaps_epoch_level.R
\name{impute_gaps_epoch_level}
\alias{impute_gaps_epoch_level}
\title{Fill Gaps in Data Using Imputation (LOCF or Set-Value)}
\usage{
impute_gaps_epoch_level(
  ...,
  remaining_epochs,
  impute_strategy = "locf",
  value = NULL
)
}
\arguments{
\item{...}{Either a data frame, or one or more named numeric vectors of equal length.}

\item{remaining_epochs}{An integer vector of the same length as the input data.
Each value represents how many times each observation (including the original)
should appear in the result.}

\item{impute_strategy}{Character string, either `"locf"` (default) or `"set-value"`.
Determines how gap rows are filled:
- `"locf"` repeats the last observed value(s).
- `"set-value"` fills gap rows with the constant provided in `value`.}

\item{value}{A single numeric value used to fill gaps when `impute_strategy = "set-value"`.
Required in that case; ignored for `"locf"`.}
}
\value{
A data frame (if multiple columns) or vector (if one column),
        with the appropriate number of rows and gap values filled.
}
\description{
This helper function fills gaps in time series or vector data based on the `remaining_epochs` vector.
Gaps can be filled using Last Observation Carried Forward (LOCF) or a user-defined constant.
}
\details{
This function avoids full memory expansion of raw time series. Instead, it builds the filled
result incrementally and supports efficient handling of imputation for gaps defined by
`remaining_epochs`. It's especially helpful in constrained environments or with large data.
}
\examples{
# LOCF with data frame
df = data.frame(x = 1:3, y = c(10, 20, 30))
impute_gaps_epoch_level(df, remaining_epochs = c(1, 3, 2))

# LOCF with a vector
impute_gaps_epoch_level(c(5, 6, 7), remaining_epochs = c(2, 1, 3))

# Set-value with a single vector
impute_gaps_epoch_level(c(1, 2), remaining_epochs = c(3, 1), impute_strategy = "set-value", value = 99)

# Set-value with multiple vectors
impute_gaps_epoch_level(x = c(1, 2), y = c(10, 20), remaining_epochs = c(2, 2),
                      impute_strategy = "set-value", value = 0)
}
